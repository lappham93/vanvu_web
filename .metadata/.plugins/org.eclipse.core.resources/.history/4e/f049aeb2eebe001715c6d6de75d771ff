<html xmlns:th="http://www.thymeleaf.org" xmlns:layout="http://www.ultraq.net.nz/web/thymeleaf/layout"
	layout:decorator="layout">

<head>
	<meta name="google-signin-client_id" content="786445467643-7n1os5gu8bihmtpuu33fo74an9v493qs.apps.googleusercontent.com"/>
	<script type="text/javascript" th:src="${resources_path} + '/custom/js/login.js'"></script>
	<!-- <script type="text/javascript" th:src="${resources_path} + '/custom/js/google.js'"></script> -->
	<script th:inline="javascript">
		/*<![CDATA[*/
     	window.___gcfg = {
		    lang: 'en-US',
		    parsetags: 'explicit'    //    DS?: can the onload param be removed from the line below and added here?
		                             //         E.g., 'explicit','onload'
	  	}

		var auth2 = {};
		var helper = (function() {
		  return {
		    /**
		     * Hides the sign in button and starts the post-authorization operations.
		     *
		     * @param {Object} authResult An Object which contains the access token and
		     *   other authentication information.
		     */
		    onSignInCallback: function(authResult) {
		      $('#authResult').html('Auth Result:<br/>');
		      for (var field in authResult) {
		        $('#authResult').append(' ' + field + ': ' +
		            authResult[field] + '<br/>');
		      }
		      if (authResult.isSignedIn.get()) {
		        $('#authOps').show('slow');
		        $('#gConnect').hide();
		        helper.profile();
		        helper.people();
		      } else {
		          if (authResult['error'] || authResult.currentUser.get().getAuthResponse() == null) {
		            // There was an error, which means the user is not signed in.
		            // As an example, you can handle by writing to the console:
		            console.log('There was an error: ' + authResult['error']);
		          }
		          $('#authResult').append('Logged out');
		          $('#authOps').hide('slow');
		          $('#gConnect').show();
		      }
	
		      console.log('authResult', authResult);
		    },
	
		    /**
		     * Calls the OAuth2 endpoint to disconnect the app for the user.
		     */
		    disconnect: function() {
		      // Revoke the access token.
		      auth2.disconnect();
		    },
	
		    /**
		     * Gets and renders the list of people visible to this app.
		     */
		    people: function() {
		      gapi.client.plus.people.list({
		        'userId': 'me',
		        'collection': 'visible'
		      }).then(function(res) {
		        var people = res.result;
		        $('#visiblePeople').empty();
		        $('#visiblePeople').append('Number of people visible to this app: ' +
		            people.totalItems + '<br/>');
		        for (var personIndex in people.items) {
		          person = people.items[personIndex];
		          $('#visiblePeople').append('<img src="' + person.image.url + '">');
		        }
		      });
		    },
	
		    /**
		     * Gets and renders the currently signed in user's profile data.
		     */
		    profile: function(){
		      gapi.client.plus.people.get({
		        'userId': 'me'
		      }).then(function(res) {
		        var profile = res.result;
		        console.log(profile);
		        $('#profile').empty();
		        $('#profile').append(
		            $('<p><img src="' + profile.image.url + '"/></p>'));
		        $('#profile').append(
		            $('<p>Hello ' + profile.displayName + '!<br />Tagline: ' +
		            profile.tagline + '<br />About: ' + profile.aboutMe + '</p>'));
		        if (profile.emails) {
		          $('#profile').append('<br/>Emails: ');
		          for (var i=0; i < profile.emails.length; i++){
		            $('#profile').append(profile.emails[i].value).append(' ');
		          }
		          $('#profile').append('<br/>');
		        }
		        if (profile.cover && profile.coverPhoto) {
		          $('#profile').append(
		              $('<p><img src=\"' + profile.cover.coverPhoto.url + '\"></p>'));
		        }
		      }, function(err) {
		        var error = err.result;
		        $('#profile').empty();
		        $('#profile').append(error.message);
		      });
		    }
		  };
		})();
	
		/**
		 * jQuery initialization
		 */
		$(document).ready(function() {
		  $('#disconnect').click(helper.disconnect);
		  $('#loaderror').hide();
		  if ($('meta')[0].content == 'YOUR_CLIENT_ID') {
		    alert('This sample requires your OAuth credentials (client ID) ' +
		        'from the Google APIs console:\n' +
		        '    https://code.google.com/apis/console/#:access\n\n' +
		        'Find and replace YOUR_CLIENT_ID with your client ID.'
		    );
		  }
		});
	
		/**
		 * Handler for when the sign-in state changes.
		 *
		 * @param {boolean} isSignedIn The new signed in state.
		 */
		var updateSignIn = function() {
		  console.log('update sign in state');
		  if (auth2.isSignedIn.get()) {
		    console.log('signed in');
		    helper.onSignInCallback(gapi.auth2.getAuthInstance());
		  }else{
		    console.log('signed out');
		    helper.onSignInCallback(gapi.auth2.getAuthInstance());
		  }
		}
	
		/**
		 * This method sets up the sign-in listener after the client library loads.
		 */
		function startApp() {
		  gapi.load('auth2', function() {
		    gapi.client.load('plus','v1').then(function() {
		      gapi.signin2.render('google-signin', {
		          scope: 'https://www.googleapis.com/auth/plus.login',
		          width: 240,
		          height: 50,
		          fetch_basic_profile: false });
		      gapi.auth2.init({fetch_basic_profile: false,
		          scope:'https://www.googleapis.com/auth/plus.login'}).then(
		            function (){
		              console.log('init');
		              auth2 = gapi.auth2.getAuthInstance();
		              auth2.isSignedIn.listen(updateSignIn);
		              auth2.then(updateSignIn);
		            });
		    });
		  });
		}
		
		function onSuccess(googleUser) {
	      console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
	      gapi.auth2.getAuthInstance().disconnect();
	      var token = googleUser.Zi.id_token;
	      console.log('Token: ' + token);
	      loginFunc("", token, App.loginType.GOOGLE);
	    }
	    function onFailure(error) {
	      console.log(error);
	    }
	    function renderButton() {
	      gapi.signin2.render('google-signin', {
	        'scope': 'profile email',
	        'width': 240,
	        'height': 50,
	        'longtitle': true,
	        'theme': 'light',
	        'onsuccess': onSuccess,
	        'onfailure': onFailure
	      });
	    }
		/*]]>*/
  	</script>
	<script src="https://apis.google.com/js/client:platform.js?onload=renderButton" async="async" defer="defer"></script>
</head>
<body>
	<div layout:fragment="content">
		<!-- Inner Page Banner Area Start Here -->
		<div class="inner-page-banner-area">
		    <div class="container">
		        <div class="row">
		            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
		                <div class="pagination-area">
		                    <h2>Login</h2>
		                    <ul>
		                        <li><a th:href="@{${site_prefix} + ''}">Home</a> /</li>
		                        <li>Login</li>
		                    </ul>
		                </div>
		            </div>
		        </div>
		    </div>
		</div>
		<!-- Inner Page Banner Area End Here -->
		<!-- Login Registration Page Area Start Here -->
		<div class="login-registration-page-area" style="padding-top: 30px;">
		    <div class="container">
		        <div class="row">
		            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
		                <div class="login-registration-field">
		                    <h2 class="cart-area-title">New Customer</h2>
		                    <p>By creating an account you will be able to shop faster, 
		                        be up to date on an order's status, 
		                        and keep track of the orders you have previously made.</p>
		                    <a class="btn-send-message disabled" onclick="loginInit()" style="width: 240px; text-align: center;">Sign in</a>
		                    <div id="google-signin" style="margin-top: 20px;"></div>
		                </div>
		            </div>
		        </div>
		    </div>
		</div>
		<!-- Login Registration Page Area End Here -->
	</div>
	
</body>
</html>